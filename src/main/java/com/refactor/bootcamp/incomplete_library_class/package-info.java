package com.refactor.bootcamp.incomplete_library_class;
/*
* 不完美的类库
* 如果想修改库类的一两个函数，可以运用
*   Introduce Foreign Method
*   ->1.在目标类中建立一个函数，用来提供你需要的功能
*     2.以要扩展的类的实例作为该函数的第一个参数
*     3.将该函数注释为：外加函数（foreign method），应在服务类实现,
*       如果将来有机会把外加函数搬移到服务类中时，就可以轻易找到这些函数
* 如果想加一大堆额外行为，运用
*   Introduce Local Extension（1.子类化  2.包装类）,好处"函数和数据被统一封装，使得其它类部分过分复杂"
*   1.建立一个扩展类，将它作为原始类的子类或包装类
*   2.在扩展类中加入转型构造函数
*   3.在扩展类中加入新特性
*   4.根据需要将原对象替换为扩展对象
*   5.针对原始类定义的所有外加函数搬移到扩展类中
*   ->subclassing 使用子类化 工作量比较少，但是障碍是在对象创建期实施，并且要改变其它对原对象的引用改成子类
*   ->wrapping 使用包装类，对本地扩展的修改会波及原对象，反之亦然
*
*/