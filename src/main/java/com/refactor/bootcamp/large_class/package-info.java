package com.refactor.bootcamp.large_class;
/*
* 过大的类
* 如果想用单个类做太多事情，其内往往就出现了太多实例变量,一旦如此，duplicate code也就要出现了，
* 因为如果其他类可能也会用相同的实例变量
*
* 原则:当发现一个类中，并非所有时刻都使用所有实例变量，或者某个类中出现多个变量有着相同前缀或结尾,
* 重构的动机就出现了
*
* 1.如果一个类中拥有很多相似的字段，而且方法又都只是和某几个字段有关系，那么可以考虑这些字段是不是应该属于另一个类
*   ->Extract Class
* 2.如果你发现类中的某些行为只被一部分实例用到，其它没有用到，可以尝试提炼"子类"或者"类"
*   -Extract Class or Extract SubClass
*   这两种的抉择就是委托和继承之间的抉择，Extract Subclass通常更容易，但它也有限制：一旦对象创建完成，
*   你无法再改变对象行为。而委托更灵活一些（策略模式）。
*
* */